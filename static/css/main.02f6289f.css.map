{"version":3,"file":"static/css/main.02f6289f.css","mappings":"AAAA,KAKE,kCAAmC,CACnC,iCAAkC,CAClC,kBAAkB,CAClB,UAAU,CANV,mIAEY,CAHZ,QAQF,CAEA,KACE,uEAEF,CAEC,aACC,YACD,CAEA,gBAIC,qBAAsB,CAGtB,iBAAkB,CAFlB,WAAW,CACX,UAGF,CAIA,gCAVE,MAAO,CAKP,mBAAoB,CAPlB,cAAe,CACjB,KAoBA,CATF,gBAKC,YAAa,CACb,eAAgB,CAFhB,UAAW,CAGX,UAEC,CACC,aAKF,qBAAsB,CAFtB,cAAiB,CACjB,eAAkB,CAFlB,aAAgB,CADhB,iBAMC,CACA,OACD,YAEC,CACA,kBAGD,WAAY,CAFZ,MAAM,CACN,OAEC,CACA,mBAGC,WAAY,CAFZ,OAAO,CACP,OAED,CAMA,qCAJC,QAAQ,CAER,QAAU,CADV,UAQD,CALA,iBACC,KAID,CAEA,KACC,cACD,CACA,wBACC,KACC,cACD,CACD,CCpFF,qBAAoC,aAAc,CAA3B,UAA6B,CAEpD,yBACE,iBAGE,qBAAsB,CADtB,eAAgB,CADhB,iBAAkB,CAGlB,iBACF,CAEA,sBACE,kBAAmB,CAMnB,YAAa,CACb,wEAAgF,CAFhF,WAAY,CAFZ,MAAO,CAFP,iBAAkB,CAClB,KAAM,CAEN,UAIF,CAEA,iBACE,kBAAmB,CAEnB,eAAgB,CADhB,iBAEF,CAEA,uBACE,kBAAmB,CAKnB,kCAAqC,CAErC,iCAAoC,CANpC,iBAAkB,CAOlB,gCAAmC,CANnC,kBAAmB,CAEnB,iCAKF,CAGA,iBACE,yCAA4C,CAC5C,yCAA4C,CAG5C,mDAAoD,CACpD,mDAAoD,CAGpD,oEAA2E,CAG3E,oEACF,CACF,CCrDA,kCAEE,oBACF,CAGA,iBACE,iBACF,CAOA,+CAEE,uBAAwB,CAGxB,MAAO,CAFP,iBAAkB,CAClB,KAAM,CAGN,kBAAmB,CACnB,wBAAiB,CAAjB,gBAAiB,CAFjB,iBAGF,CAIA,WAEE,6CAAgD,CAGhD,6CAAgD,CAGhD,6CACF,CAEA,iBAEE,wDAA2D,CAG3D,wDACF,CAEA,iBAEE,wDAA2D,CAG3D,0DAA2D,CAG3D,2EAEC,CAGD,2DAA8D,CAG9D,uDACF","sources":["index.css","../node_modules/splitting/dist/splitting-cells.css","../node_modules/splitting/dist/splitting.css"],"sourcesContent":["body {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  background:#171717;\n  color:#fff;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}\n\n .DetailsPage{\n\t display: none;\n } \n \n .cursor-outline{\n    position: fixed;\n  top: 0;\n  left: 0;\n  background-color: #fff;\n  height:20px;\n  width:20px;\n  border-radius: 50%;\n  pointer-events: none;\n}\n\n\n\n.load-container {\n\tposition: fixed;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100vh;\n\toverflow: hidden;\n\tz-index: 10;\n\tpointer-events: none;\n  }\n   .load-screen{\n\tposition: absolute;\n\tpadding-top: 0px;\n\tpadding-left: 0px;\n\tpadding-right: 0px;\n\tbackground-color: #ccc;\n\n  }\n  .Headd {\n\tdisplay: none;\n\t/* pointer-events: none; */\n  }\n  .load-screen.left{\n\tleft:0;\n\twidth: 0%;\n\theight: 100%;\n  }\n  .load-screen.right{\n\t  right:0;\n\t  width: 0%;\n\t  height: 100%;\n  }\n  .load-screen.bottom{\n\t  bottom:0;\n\t  width: 100%;\n\t  height: 0%;\n  }\n  .load-screen.top{\n\t  top:0;\n\t  bottom:0;\n\t  width: 100%;\n\t  height: 0%;\n  }\n\n  html{\n\t  font-size: 16px;\n  }\n  @media(max-width:640px){\n\t  html{\n\t\t  font-size: 10px;\n\t  }\n  }",".splitting.cells img { width: 100%; display: block; }\n\n@supports ( display: grid ) {\n  .splitting.cells {\n    position: relative;\n    overflow: hidden;\n    background-size: cover;\n    visibility: hidden;\n  }\n\n  .splitting .cell-grid {\n    background: inherit;\n    position: absolute;\n    top: 0; \n    left: 0; \n    width: 100%; \n    height: 100%;\n    display: grid;\n    grid-template: repeat( var(--row-total), 1fr ) / repeat( var(--col-total), 1fr );\n  }\n\n  .splitting .cell {\n    background: inherit;\n    position: relative;\n    overflow: hidden;\n  }\n\n  .splitting .cell-inner {\n    background: inherit;\n    position: absolute;\n    visibility: visible;\n    /* Size to fit the whole container size */\n    width: calc(100% * var(--col-total));\n    height: calc(100% * var(--row-total));\n    /* Position properly */\n    left: calc(-100% * var(--col-index));\n    top: calc(-100% * var(--row-index));\n  }\n\n  /* Helper variables for advanced effects */\n  .splitting .cell {\n    --center-x: calc((var(--col-total) - 1) / 2);\n    --center-y: calc((var(--row-total) - 1) / 2);\n\n    /* Offset from center, positive & negative */\n    --offset-x: calc(var(--col-index) - var(--center-x));\n    --offset-y: calc(var(--row-index) - var(--center-y));\n\n    /* Absolute distance from center, only positive */\n    --distance-x: calc( (var(--offset-x) * var(--offset-x)) / var(--center-x) );\n\n    /* Absolute distance from center, only positive */\n    --distance-y: calc( (var(--offset-y) * var(--offset-y)) / var(--center-y) );\n  }\n}\n\n","/* Recommended styles for Splitting */\n.splitting .word,\n.splitting .char {\n  display: inline-block;\n}\n\n/* Psuedo-element chars */\n.splitting .char {\n  position: relative;\n}\n\n/**\n * Populate the psuedo elements with the character to allow for expanded effects\n * Set to `display: none` by default; just add `display: block` when you want\n * to use the psuedo elements\n */\n.splitting .char::before,\n.splitting .char::after {\n  content: attr(data-char);\n  position: absolute;\n  top: 0;\n  left: 0;\n  visibility: hidden;\n  transition: inherit;\n  user-select: none;\n}\n\n/* Expanded CSS Variables */\n\n.splitting {\n  /* The center word index */\n  --word-center: calc((var(--word-total) - 1) / 2);\n\n  /* The center character index */\n  --char-center: calc((var(--char-total) - 1) / 2);\n\n  /* The center character index */\n  --line-center: calc((var(--line-total) - 1) / 2);\n}\n\n.splitting .word {\n  /* Pecent (0-1) of the word's position */\n  --word-percent: calc(var(--word-index) / var(--word-total));\n\n  /* Pecent (0-1) of the line's position */\n  --line-percent: calc(var(--line-index) / var(--line-total));\n}\n\n.splitting .char {\n  /* Percent (0-1) of the char's position */\n  --char-percent: calc(var(--char-index) / var(--char-total));\n\n  /* Offset from center, positive & negative */\n  --char-offset: calc(var(--char-index) - var(--char-center));\n\n  /* Absolute distance from center, only positive */\n  --distance: calc(\n     (var(--char-offset) * var(--char-offset)) / var(--char-center)\n  );\n\n  /* Distance from center where -1 is the far left, 0 is center, 1 is far right */\n  --distance-sine: calc(var(--char-offset) / var(--char-center));\n\n  /* Distance from center where 1 is far left/far right, 0 is center */\n  --distance-percent: calc((var(--distance) / var(--char-center)));\n}\n"],"names":[],"sourceRoot":""}